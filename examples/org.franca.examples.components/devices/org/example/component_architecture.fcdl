package org.example

import model "classpath:/Tags.fcdl"
import org.example.* from "classpath:/org/example/MediaPlayer.fidl"

//=====================================================
// service definitions

<** @dienst **>
// itemis: What does "service" mean? Probably "instantiable component", but there are different notions of "service" which might confuse users.
service component Component1 {}


//=====================================================
// architecture structure definitions

<** @cluster **>
component OrphanedComponent {
	contains Component1 as Comp1Inst1Orphaned	
}

<** @framework **>
component Component2 {
	version { major 1 minor 0 }
	contains Component1 as ComponentInst1
	contains Component1 as ComponentInst2
	contains Component1 as ComponentInst3
}

<** 
 ** @author: bernhard hennlich
 **>
root component VehicleFuture
{
	contains InfotainmentFrameworkFuture as InfotainmentFramework2030
}

<** @framework **>
component InfotainmentFrameworkFuture {
	contains AudioCluster 
}

<** @cluster **>
component AudioCluster {
	contains Component2 as Component2Inst1
}

//=====================================================
// partitioning

device HeadUnit {
	// itemis: Instance references should be implemented differently. Each segment of the FQN should be a reference on its own.
	partition org.example.VehicleFuture.InfotainmentFramework2030.AudioCluster.Component2Inst1.ComponentInst3
	partition org.example.VehicleFuture.InfotainmentFramework2030.AudioCluster.Component2Inst1.ComponentInst1
}
device Amplifier {
	partition org.example.VehicleFuture.InfotainmentFramework2030.AudioCluster.Component2Inst1.ComponentInst2
}
