package example.org

import org.genivi.am.commandinterface.* from "../idl/org/genivi/am/CommandInterface.fidl" 

@service
component BasicComponent {
}

component Component1 {
	version { major 1 minor 0 }
	contains example.org.BasicComponent as O1
}

component Component2 {
	version { major 1 minor 0 }
	contains example.org.Component1 as ComponentInst1
	contains example.org.Component1 as ComponentInst2
	contains example.org.Component1 as ComponentInst3
}


//=======================================================

// real software
component RealisationComponent extends example.org.Component1 {
	version { major 1 minor 0 }
}

component RealisationComponent2 extends example.org.Component2 {
	// proposal from GENIVI discussion
	finally implement ComponentInst1 by RealisationComponent
}


// add another layer
component RealisationComponent2a extends example.org.RealisationComponent2 {
	// proposal from GENIVI discussion
	// should this be allowed??
	implement ComponentInst1 by RealisationComponent		// error due to finally modifier in RealisationComponent2
	implement ComponentInst2 by RealisationComponent		// ok as this has not been implemented with finally		
}


inject example.org.RealisationComponent into example.org.Component2.ComponentInst2
