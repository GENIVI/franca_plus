package org.example

import "../platform/bus_signal_spec.cdepl"
import "../fcdl/70-HelloWorld.fcdl"
import "../fidl/70-HelloWorld.fidl"
import "../fidl/71-HelloWorldTypes.fidl"

// deployment for types
define platform.bus_signal_spec for typeCollection org.example as HelloWorldTypesDeployment {
	struct Answer {
		greeting { BusMapping = "default" }
		timeOfDay { BusMapping = "default" }
	}
	struct Person { 
		location { BusMapping = "default" }
		name { BusMapping = "default" }
	}
						
}

define platform.bus_signal_spec for interface org.example.HelloWorld as InterfaceDeployment {
	use org.example.HelloWorldTypesDeployment
	method sayHello {
		BusMethods = "method"
		in{
			name{
				BusArgument = "argument"
			}
		}
		out{
			message {
				BusArgument = "argument"
				#struct {
					greeting {
					   BusMapping = "mapping"
					}
				}
			}
		}
	}	
}

define platform.bus_signal_spec for interface org.example.HelloWorld2 as Interface2Deployment {
	attribute knownPeople {
			BusAttribute = "attribute"
		}
	broadcast isThereSomeBody{
		BusBroadcast = "broadcast"
		out{
			request{
				BusArgument = "argument"
			}
			
		}
	}
}

define platform.bus_signal_spec for component org.example.HelloWorldClient as HelloWorldClientComponentDeployment {}

define platform.bus_signal_spec for component org.example.HelloWorldServer as HelloWorldServerComponentDeployment{
	
	provide AskMePort {
		
	}
}

